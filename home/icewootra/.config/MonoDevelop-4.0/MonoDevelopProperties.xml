<MonoDevelopProperties version="2.0">
  <Property key="MonoDevelop.Core.FirstRun" value="False" />
  <Property key="MonoDevelop.EnableInstrumentation" value="False" />
  <Property key="MonoDevelop.Ide.UserInterfaceTheme" value="" />
  <Property key="MonoDevelop.Ide.UserInterfaceLanguage" value="" />
  <Property key="MonoDevelop.Ide.DefaultTargetRuntime" value="__current" />
  <Property key="MonoDevelop.EnableAutomatedTesting" value="False" />
  <Property key="MonoDevelop.Ide.WorkbenchCompactness" value="Normal" />
  <Property key="FavoriteRecentFiles">
    <ArrayOfString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
  </Property>
  <Property key="WelcomePage.UpdateFromInternet" value="True" />
  <Property key="SharpDevelop.Workbench.WorkbenchMemento">
    <Property key="bounds" value="50, 50, 1820, 930" />
    <Property key="windowState" value="Maximized" />
    <Property key="fullscreen" value="False" />
    <Property key="toolbarStatus">
      <DockToolbarFrameStatus xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <version>2</version>
        <layout id="" />
        <layout id="Solution" />
        <layout id="Debug" />
      </DockToolbarFrameStatus>
    </Property>
  </Property>
  <Property key="ToolboxIsInCompactMode" value="False" />
  <Property key="SharpDevelop.TaskList.ShowErrors" value="True" />
  <Property key="SharpDevelop.TaskList.ShowWarnings" value="True" />
  <Property key="SharpDevelop.TaskList.ShowMessages" value="True" />
  <Property key="Monodevelop.ErrorListColumns" value="TRUE;TRUE;TRUE;TRUE;TRUE;TRUE;TRUE" />
  <Property key="SharpDevelop.TaskList.OutputViewVisible" value="True" />
  <Property key="Monodevelop.UserTasksHighPrioColor" value="rgb:0/0/0" />
  <Property key="Monodevelop.UserTasksNormalPrioColor" value="rgb:0/0/0" />
  <Property key="Monodevelop.UserTasksLowPrioColor" value="rgb:0/0/0" />
  <Property key="Monodevelop.TaskList.ActiveView" value="MonoDevelop.Ide.Tasks.CommentTasksView" />
  <Property key="Monodevelop.TaskListTokens" value="FIXME:2;TODO:1;HACK:1;UNDONE:0" />
  <Property key="Monodevelop.CommentTasksColumns" value="TRUE;TRUE;TRUE;TRUE" />
  <Property key="MonoDevelop.Ide.ExtensibleTreeView.Zoom.ProjectPad" value="1" />
  <Property key="MonoDevelop.Ide.ExtensibleTreeView.Zoom.MonoDevelop.NUnit.TestPad" value="1" />
  <Property key="MonoDevelop.Core.Gui.CurrentWorkbenchLayout" value="Solution" />
  <Property key="MonoDevelop.Ide.AddinUpdater.CheckForUpdates" value="True" />
  <Property key="MonoDevelop.Ide.AddinUpdater.LastCheck" value="06/10/2014 11:22:51" />
  <Property key="MonoDevelop.Ide.AddinUpdater.UpdateSpanUnit" value="Day" />
  <Property key="MonoDevelop.Ide.AddinUpdater.UpdateSpanValue" value="1" />
  <Property key="MonoDevelop.Core.Gui.Dialog.TipOfTheDayView.ShowTipsAtStartup" value="False" />
  <Property key="MonoDevelop.Ide.AddinUpdater.UpdateLevel" value="Stable" />
  <Property key="MonoDevelop.Core.LastRunVersion" value="4.0.12" />
  <Property key="MonoDevelop.Core.LastRunRevision" value="5" />
  <Property key="SharpDevelop.LoadPrevProjectOnStartup" value="False" />
  <Property key="MonoDevelop.GtkCore.ShowNonContainerWarning" value="True" />
  <Property key="Dialogs.NewProjectDialog.RecentTemplates" value="CSharpConsoleProject,WebApplication-Empty,WebApplication" />
  <Property key="MonoDevelop.Core.Gui.Dialogs.NewProjectDialog.DefaultPath" value="/home/icewootra/Projects" />
  <Property key="Dialogs.NewProjectDialog.LastSelectedCategory" value="C#" />
  <Property key="MonoDevelop.DefaultFileFormat" value="MSBuild10" />
  <Property key="Monodevelop.FileSelector.LastPattern" value="*" />
  <Property key="MonoDevelop.FileSelector.LastPath" value="/home/icewootra/projects/collabmate/code/server/csharp" />
  <Property key="MonoDevelop.Core.Gui.Dialogs.NewProjectDialog.AutoCreateProjectSubdir" value="False" />
  <Property key="MonoDevelop.Ide.BuildWithMSBuild" value="False" />
  <Property key="MonoDevelop.Ide.MSBuildVerbosity" value="Normal" />
  <Property key="Author.Copyright" value="Robert Petranovic" />
  <Property key="Author.Company" value="" />
  <Property key="Author.Trademark" value="" />
  <Property key="MonoDevelop.Projects.Text.ConversionEncodings" value="" />
  <Property key="TabIsReindent" value="False" />
  <Property key="EnableSemanticHighlighting" value="True" />
  <Property key="AutoInsertMatchingBracket" value="False" />
  <Property key="SmartSemicolonPlacement" value="False" />
  <Property key="UnderlineErrors" value="True" />
  <Property key="IndentStyle" value="Smart" />
  <Property key="ShowLineNumberMargin" value="True" />
  <Property key="ShowFoldMargin" value="False" />
  <Property key="HighlightCaretLine" value="False" />
  <Property key="EnableSyntaxHighlighting" value="True" />
  <Property key="HighlightMatchingBracket" value="True" />
  <Property key="ShowRuler" value="False" />
  <Property key="FontName" value="Mono 10" />
  <Property key="GutterFontName" value="" />
  <Property key="ColorScheme" value="Solarized Dark" />
  <Property key="DefaultRegionsFolding" value="False" />
  <Property key="DefaultCommentFolding" value="True" />
  <Property key="UseViModes" value="True" />
  <Property key="OnTheFlyFormatting" value="True" />
  <Property key="ControlLeftRightMode" value="MonoDevelop" />
  <Property key="EnableAnimations" value="True" />
  <Property key="UseAntiAliasing" value="True" />
  <Property key="EnableHighlightUsages" value="False" />
  <Property key="DrawIndentationMarkers" value="False" />
  <Property key="LineEndingConversion" value="Ask" />
  <Property key="ShowWhitespaces" value="Always" />
  <Property key="IncludeWhitespaces" value="Space, Tab" />
  <Property key="WrapLines" value="False" />
  <Property key="EnableQuickDiff" value="False" />
  <Property key="MonoDevelop.AnalysisCore.AnalysisEnabled" value="True" />
  <Property key="ScrollBar.Mode" value="Overview" />
  <Property key="MonoDevelop.Ide.NewShowMessageBubbles" value="ForErrorsAndWarnings" />
  <Property key="SharpDevelop.LoadDocumentProperties" value="True" />
  <Property key="EnableCodeCompletion" value="True" />
  <Property key="EnableParameterInsight" value="True" />
  <Property key="EnableAutoCodeCompletion" value="True" />
  <Property key="AddImportedItemsToCompletionList" value="False" />
  <Property key="IncludeKeywordsInCompletionList" value="True" />
  <Property key="AddParenthesesAfterCompletion" value="False" />
  <Property key="AddOpeningOnly" value="False" />
  <Property key="CompletionListRows" value="7" />
  <Property key="FilterCompletionListByEditorBrowsable" value="True" />
  <Property key="IncludeEditorBrowsableAdvancedMembers" value="True" />
  <Property key="XmlEditor.AddIn.Options">
    <Property key="ShowSchemaAnnotation" value="False" />
    <Property key="AutoCompleteElements" value="False" />
    <Property key="AutoInsertFragment" value="False" />
  </Property>
  <Property key="Testing.EnableUnitTestEditorIntegration" value="False" />
  <Property key="MonoDevelop.Debugger.DebuggingService.EnginePriority" value="Mono.Debugger.Soft,Mono.Debugger.Soft.Custom,Mono.Debugger.Soft.AspNet" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS1717AssignmentMadeToSameVariableIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BitwiseOperationOnNonFlagsEnumIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CastExpressionOfIncompatibleTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CompareBooleanWithTrueOrFalseIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CompareFloatWithEqualityOperatorIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0029InvalidConversionIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS1729TypeHasNoConstructorWithNArgumentsIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConstantConditionIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DoubleNegationOperatorIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExpressionIsAlwaysOfProvidedTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExpressionIsNeverOfProvidedTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MethodNeverReturnsIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MethodOverloadHidesOptionalParameterIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MissingStringComparisonIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NegativeRelationalExpressionIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExplicitConversionInForEachIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ForControlVariableIsNeverModifiedIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConditionalTernaryEqualBranchIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MultipleEnumerationIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCommaInArrayInitializerIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAssignmentIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAttributeParenthesesIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCaseLabelIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantIfElseBlockIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantDefaultFieldInitializerIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantObjectCreationArgumentListIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantObjectOrCollectionInitializerIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToFirstIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToFirstOrDefaultIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToLastIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToLastOrDefaultIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToLongCountIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToSingleIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToSingleOrDefaultIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCastIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReferenceEqualsCalledWithValueTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ResultOfAsyncCallShouldNotBeIgnoredIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToCountIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnreachableCodeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LocalVariableHidesMemberIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterHidesMemberIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LocalVariableNotUsedIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterNotUsedIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedTypeParameterIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterOnlyAssignedIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertConditionalTernaryToNullCoalescingIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NotImplementedExceptionIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantInternalIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantNameQualifierIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantPrivateIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantUsingDirectiveIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithStringIsNullOrEmptyIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SuggestUseVarKeywordEvidentIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.InconsistentNamingIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.IncorrectExceptionParameterOrderingIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ValueParameterNotUsedIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterCanBeDemotedIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AccessToStaticMemberViaDerivedTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OptionalParameterCouldBeSkippedIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCatchIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantToStringCallIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CallToObjectEqualsViaBaseIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.IncorrectCallToObjectGetHashCodeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FormatStringIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExceptionRethrowIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ThreadStaticAtInstanceFieldIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StaticFieldInGenericTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToAnyIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SimplifyAnonymousMethodToDelegateIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0127ReturnMustNotBeFollowedByAnyExpression" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantComparisonWithNullIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StaticConstructorParameterIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StaticConstructorAccessModifierIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBaseConstructorCallIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyConstructorIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PublicConstructorInAbstractClassIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToStaticMethodIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DuplicateExpressionsInConditionsIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DuplicateIfInIfChainIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseBlockInsteadColonIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LockThisIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DisposeMethodInNonIDisposableTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DoNotCallOverridableMethodsInConstructorIssue" value="Warning" />
  <Property key="Dialogs.NewFileDialog.LastSelectedCategory.AspNetApp.C#" value="General" />
  <Property key="SharpDevelop.CreateBackupCopy" value="False" />
  <Property key="AutoFormatDocumentOnSave" value="True" />
  <Property key="MonoDevelop.Projects.GlobalPolicyMimeTypes" value="" />
  <Property key="AutoSetPatternCasing" value="False" />
  <Property key="Author.Name" value="Robert Petranovic" />
  <Property key="Author.Email" value="robi.petranovic@gmail.com" />
  <Property key="MonoDevelop.Ide.BuildBeforeExecuting" value="True" />
  <Property key="MonoDevelop.Ide.BeforeCompileAction" value="SaveAllFiles" />
  <Property key="MonoDevelop.Ide.NewShowErrorPadAfterBuild" value="Never" />
  <Property key="MonoDevelop.Ide.NewJumpToFirstErrorOrWarning" value="Error" />
  <Property key="MonoDevelop.Debugger.DebuggingService.AllowTargetInvoke" value="True" />
  <Property key="MonoDevelop.Debugger.DebuggingService.AllowToStringCalls" value="True" />
  <Property key="MonoDevelop.Debugger.DebuggingService.EvaluationTimeout" value="2500" />
  <Property key="MonoDevelop.Debugger.DebuggingService.FlattenHierarchy" value="False" />
  <Property key="MonoDevelop.Debugger.DebuggingService.GroupPrivateMembers" value="True" />
  <Property key="MonoDevelop.Debugger.DebuggingService.GroupStaticMembers" value="True" />
  <Property key="MonoDevelop.Debugger.DebuggingService.StepOverPropertiesAndOperators" value="True" />
  <Property key="MonoDevelop.Debugger.DebuggingService.ProjectAssembliesOnly" value="True" />
  <Property key="MonoDevelop.Ide.SelectEncodingsDialog.ConversionEncodings" value="65001,28605,1200" />
  <Property key="MonoDevelop.Ide.AddinUpdater.TestMode" value="" />
  <Property key="MonoDevelop.Ide.RunWithWarnings" value="True" />
  <Property key="CBinding.DefaultCCompiler" value="gcc" />
  <Property key="CBinding.DefaultCppCompiler" value="g++" />
  <Property key="CBinding.CTagsExecutable" value="ctags" />
  <Property key="CBinding.ParseSystemTags" value="True" />
  <Property key="CBinding.ParseLocalVariables" value="False" />
  <Property key="ContextActions.text/x-csharp" value="" />
  <Property key="MonoDevelop.VersionControl.Git.UseRebaseOptionWhenPulling" value="True" />
  <Property key="MonoDevelop.VersionControl.Git.StashUnstashWhenUpdating" value="True" />
  <Property key="MonoDevelop.VersionControl.Git.StashUnstashWhenSwitchingBranches" value="True" />
  <Property key="MonoDevelop.Core.Assemblies.UserAssemblyContext">
    <ArrayOfString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
  </Property>
  <Property key="AssemblyBrowser.InspectLanguage" value="2" />
  <Property key="MonoDevelop.DesignerSupport.ClassOutline.IsGrouped" value="False" />
  <Property key="MonoDevelop.DesignerSupport.ClassOutline.IsSorted" value="False" />
  <Property key="MonoDevelop.DesignerSupport.ClassOutline.GroupOrder" value="" />
  <Property key="HideObsoleteItems" value="False" />
  <Property key="SharpDevelop.TaskList.LogSeparatorPosition" value="0.49973586899102" />
  <Property key="MonoDevelop.Ide.DefaultHideMessageBubbles" value="False" />
  <Property key="MonoDevelop.Shell" value="xterm" />
  <Property key="BuildBeforeRunningTests" value="True" />
  <Property key="MainToolbar.Search.IncludeMembers" value="True" />
  <Property key="GenerateFormattingUndoStep" value="False" />
  <Property key="IncludeCodeSnippetsInCompletionList" value="True" />
  <Property key="ForceCompletionSuggestionMode" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.MonoDevelop.CSharp.Refactoring.CodeIssues.MonoTODOIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.MonoDevelop.CSharp.Refactoring.CodeIssues.MonoTODOIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfToAndExpressionIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfToAndExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LockThisIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NegativeRelationalExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NotImplementedExceptionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantInternalIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantPrivateIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.XmlDocIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.XmlDocIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AccessToDisposedClosureIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AccessToDisposedClosureIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AccessToModifiedClosureIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AccessToModifiedClosureIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.BaseMethodCallWithDefaultParameterIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.BaseMethodCallWithDefaultParameterIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BitwiseOperatorOnEnumWithoutFlagsIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BitwiseOperatorOnEnumWithoutFlagsIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CanBeReplacedWithTryCastAndCheckForNullIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CanBeReplacedWithTryCastAndCheckForNullIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CompareOfFloatsByEqualityOperatorIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CompareOfFloatsByEqualityOperatorIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConditionalTernaryEqualBranchIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DoNotCallOverridableMethodsInConstructorIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyGeneralCatchClauseIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyGeneralCatchClauseIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EqualExpressionComparisonIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EqualExpressionComparisonIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EventUnsubscriptionViaAnonymousDelegateIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EventUnsubscriptionViaAnonymousDelegateIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ForControlVariableIsNeverModifiedIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FunctionNeverReturnsIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FunctionNeverReturnsIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LocalVariableHidesMemberIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LongLiteralEndingLowerLIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LongLiteralEndingLowerLIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OptionalParameterHierarchyMismatchIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OptionalParameterHierarchyMismatchIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OptionalParameterRefOutIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OptionalParameterRefOutIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterHidesMemberIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StaticFieldInGenericTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ThreadStaticAtInstanceFieldIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ValueParameterNotUsedIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS1573ParameterHasNoMatchingParamTagIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS1573ParameterHasNoMatchingParamTagIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS1717AssignmentMadeToSameVariableIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnassignedReadonlyFieldIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnassignedReadonlyFieldIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.InconsistentNamingIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NonPublicMethodWithTestAttributeIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NonPublicMethodWithTestAttributeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertClosureToMethodGroupIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertClosureToMethodGroupIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertConditionalTernaryToNullCoalescingIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfStatementToConditionalTernaryExpressionIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfStatementToConditionalTernaryExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfStatementToNullCoalescingExpressionIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfStatementToNullCoalescingExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertNullableToShortFormIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertNullableToShortFormIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.InvokeAsExtensionMethodIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.InvokeAsExtensionMethodIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RewriteIfReturnToReturnIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RewriteIfReturnToReturnIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SuggestUseVarKeywordEvidentIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AccessToStaticMemberViaDerivedTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BaseMemberHasParamsIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BaseMemberHasParamsIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfDoToWhileIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfDoToWhileIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToConstantIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToConstantIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyEmbeddedStatementIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyEmbeddedStatementIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FieldCanBeMadeReadOnlyIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FieldCanBeMadeReadOnlyIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberCanBeMadeStaticIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberCanBeMadeStaticIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberCanBeMadeStaticIssue.Non-private accessibility" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberCanBeMadeStaticIssue.Non-private accessibility.isEnabled" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberCanBeMadeStaticIssue.Private accessibility" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberCanBeMadeStaticIssue.Private accessibility.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PublicConstructorInAbstractClassIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithFirstOrDefaultIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithFirstOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithLastOrDefaultIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithLastOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeAnyIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeAnyIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeCountIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeCountIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeFirstIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeFirstIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeFirstOrDefaultIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeFirstOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeLastIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeLastIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeLastOrDefaultIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeLastOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeLongCountIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeLongCountIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeSingleIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeSingleIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeSingleOrDefaultIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeSingleOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeWhereIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeWhereIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToAnyIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToCountIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToFirstIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToFirstOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToLastIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToLastOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToLongCountIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToSingleIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToSingleOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithStringIsNullOrEmptyIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SimplifyConditionalTernaryExpressionIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SimplifyConditionalTernaryExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringEndsWithIsCultureSpecificIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringEndsWithIsCultureSpecificIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringIndexOfIsCultureSpecificIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringIndexOfIsCultureSpecificIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringLastIndexOfIsCultureSpecificIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringLastIndexOfIsCultureSpecificIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringStartsWithIsCultureSpecificIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringStartsWithIsCultureSpecificIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseMethodAnyIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseMethodAnyIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseMethodIsInstanceOfTypeIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseMethodIsInstanceOfTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConstantNullCoalescingConditionIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConstantNullCoalescingConditionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DoubleNegationOperatorIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAttributeParenthesesIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBaseQualifierIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBaseQualifierIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBoolCompareIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBoolCompareIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCaseLabelIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCastIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCommaInArrayInitializerIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantComparisonWithNullIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantObjectCreationArgumentListIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExtendsListEntryIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExtendsListEntryIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantIfElseBlockIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantNameQualifierIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantObjectOrCollectionInitializerIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantTernaryExpressionIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantTernaryExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue.Everywhere else" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue.Everywhere else.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue.Inside constructors" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue.Inside constructors.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantToStringCallForValueTypesIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantToStringCallForValueTypesIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantToStringCallIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantUsingDirectiveIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyConstructorIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyDestructorIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyDestructorIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyNamespaceIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyNamespaceIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EnumUnderlyingTypeIsIntIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EnumUnderlyingTypeIsIntIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LocalVariableNotUsedIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PartialTypeWithSinglePartIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PartialTypeWithSinglePartIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBaseConstructorCallIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantDefaultFieldInitializerIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantOverridenMemberIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantOverridenMemberIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedTypeParameterIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CallToObjectEqualsViaBaseIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CastExpressionOfIncompatibleTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0659ClassOverrideEqualsWithoutGetHashCode" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0659ClassOverrideEqualsWithoutGetHashCode.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS1729TypeHasNoConstructorWithNArgumentsIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConstantConditionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DisposeMethodInNonIDisposableTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DuplicatedLinqToListOrArrayIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DuplicatedLinqToListOrArrayIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExceptionRethrowIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExplicitConversionInForEachIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExpressionIsNeverOfProvidedTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.IncorrectCallToObjectGetHashCodeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MethodOverloadHidesOptionalParameterIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OptionalParameterCouldBeSkippedIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAssignmentIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ResultOfAsyncCallShouldNotBeIgnoredIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnreachableCodeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseOfMemberOfNullReference" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseOfMemberOfNullReference.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterOnlyAssignedIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DontUseLinqWhenItsVerboseAndInefficientIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DontUseLinqWhenItsVerboseAndInefficientIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfStatementToSwitchStatementIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfStatementToSwitchStatementIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantParamsIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantParamsIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ForCanBeConvertedToForeachIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ForCanBeConvertedToForeachIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantEmptyDefaultSwitchBranchIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantEmptyDefaultSwitchBranchIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0126ReturnMustBeFollowedByAnyExpression" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0126ReturnMustBeFollowedByAnyExpression.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0127ReturnMustNotBeFollowedByAnyExpression.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0152DuplicateCaseLabelValueIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0152DuplicateCaseLabelValueIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0759RedundantPartialMethodIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0759RedundantPartialMethodIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0029InvalidConversionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SealedMemberInSealedClassIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SealedMemberInSealedClassIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfToOrExpressionIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfToOrExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedAnonymousMethodSignatureIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedAnonymousMethodSignatureIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyStatementIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyStatementIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantArgumentDefaultValueIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantArgumentDefaultValueIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantEmptyFinallyBlockIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantEmptyFinallyBlockIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PartialMethodParameterNameMismatchIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PartialMethodParameterNameMismatchIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSimpleAssignmentIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSimpleAssignmentIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringCompareToIsCultureSpecificIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringCompareToIsCultureSpecificIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringCompareIsCultureSpecificIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringCompareIsCultureSpecificIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseArrayCreationExpressionIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseArrayCreationExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BaseMethodParameterNameMismatchIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BaseMethodParameterNameMismatchIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExplicitArraySizeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExplicitArraySizeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantUnsafeContextIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantUnsafeContextIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ProhibitedModifiersIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ProhibitedModifiersIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RemoveRedundantOrStatementIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RemoveRedundantOrStatementIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AutoAsyncIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AutoAsyncIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AdditionalOfTypeIssues" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AdditionalOfTypeIssues.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantLambdaParameterTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantLambdaParameterTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantLambdaSignatureParenthesesIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantLambdaSignatureParenthesesIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToLambdaExpressionIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToLambdaExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantArgumentNameIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantArgumentNameIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCheckBeforeAssignmentIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCheckBeforeAssignmentIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantLogicalConditionalExpressionOperandIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantLogicalConditionalExpressionOperandIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ForStatementConditionIsTrueIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ForStatementConditionIsTrueIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToStaticTypeIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToStaticTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OperatorIsCanBeUsedIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OperatorIsCanBeUsedIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseIsOperatorIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseIsOperatorIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FormatStringProblemIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FormatStringProblemIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCatchClauseIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCatchClauseIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CheckNamespaceIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CheckNamespaceIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PossibleMultipleEnumerationIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PossibleMultipleEnumerationIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConditionIsAlwaysTrueOrFalseIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConditionIsAlwaysTrueOrFalseIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedLabelIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedLabelIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberHidesStaticFromOuterClassIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberHidesStaticFromOuterClassIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MethodOverloadWithOptionalParameterIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MethodOverloadWithOptionalParameterIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReferenceEqualsWithValueTypeIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReferenceEqualsWithValueTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CompareNonConstrainedGenericWithNullIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CompareNonConstrainedGenericWithNullIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantDelegateCreationIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantDelegateCreationIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantEnumerableCastCallIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantEnumerableCastCallIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MissingInterfaceMemberImplementationIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MissingInterfaceMemberImplementationIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnmatchedSizeSpecificationInArrayCreationIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnmatchedSizeSpecificationInArrayCreationIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBlockInDifferentBranchesIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBlockInDifferentBranchesIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NonReadonlyReferencedInGetHashCodeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NonReadonlyReferencedInGetHashCodeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterCanBeDeclaredWithBaseTypeIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterCanBeDeclaredWithBaseTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SameGuardConditionExpressionInIfelseBranchesIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SameGuardConditionExpressionInIfelseBranchesIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExplicitArrayCreationIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExplicitArrayCreationIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ArrayCreationCanBeReplacedWithArrayInitializerIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ArrayCreationCanBeReplacedWithArrayInitializerIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAnonymousTypePropertyNameIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAnonymousTypePropertyNameIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PossibleAssignmentToReadonlyFieldIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PossibleAssignmentToReadonlyFieldIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ObjectCreationAsStatementIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ObjectCreationAsStatementIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NotResolvedInTextIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NotResolvedInTextIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DelegateSubtractionIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DelegateSubtractionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedParameterIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedParameterIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SimplifyLinqExpressionIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SimplifyLinqExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExplicitNullableCreationIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExplicitNullableCreationIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantStringToCharArrayCallIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantStringToCharArrayCallIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToAutoPropertyIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToAutoPropertyIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StaticConstructorParameterIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0183ExpressionIsAlwaysOfProvidedTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0183ExpressionIsAlwaysOfProvidedTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PolymorphicFieldLikeEventInvocationIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PolymorphicFieldLikeEventInvocationIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PossibleMistakenCallToGetTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PossibleMistakenCallToGetTypeIssue.isEnabled" value="True" />
  <Property key="CompletionCharacters.C#.CompleteOnSpace" value="True" />
  <Property key="CompletionCharacters.C#.CompleteOnChars" value="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\" />
  <Property key="CompletionCharacters.Html.CompleteOnSpace" value="True" />
  <Property key="CompletionCharacters.Html.CompleteOnChars" value="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\" />
  <Property key="CompletionCharacters.C/C++.CompleteOnSpace" value="True" />
  <Property key="CompletionCharacters.C/C++.CompleteOnChars" value="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\" />
  <Property key="CompletionCharacters.Razor.CompleteOnSpace" value="True" />
  <Property key="CompletionCharacters.Razor.CompleteOnChars" value="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\" />
  <Property key="CompletionCharacters.Other.CompleteOnSpace" value="True" />
  <Property key="CompletionCharacters.Other.CompleteOnChars" value="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\" />
  <Property key="CodeActionUsages">
    <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DontUseLinqWhenItsVerboseAndInefficientIssue" value="1" />
  </Property>
  <Property key="FontProperties" />
  <Property key="MonoDevelop.TextEditor.Document.Document.DefaultDocumentAggregatorProperties" />
</MonoDevelopProperties>